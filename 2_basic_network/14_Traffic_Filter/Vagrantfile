# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:inetRouter2 => {
        :box_name => "centos/7",
        :public => {:adapter => 3},
        :net => [
                   {ip: '192.168.255.3', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "router-net"},
                ]
  },

:inetRouter => {
        :box_name => "centos/6",
        #:public => {:adapter => 3},
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "router-net"},
                ]
  },
  
  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.1', adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                   {ip: '192.168.0.33', adapter: 4, netmask: "255.255.255.240", virtualbox__intnet: "hw-net"},
                   {ip: '192.168.0.65', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "mgt-net"},
                ]
  },

  :centralServer => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: true},
                   {adapter: 4, auto_config: false, virtualbox__intnet: true},
                ]
 },
 
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s
        when "inetRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "net.ipv4.conf.all.forwarding=1" >> /etc/sysctl.conf
            iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
            touch /etc/sysconfig/network-scripts/route-eth1 
            echo "192.168.0.0/24 via 192.168.255.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
            echo "192.168.1.0/24 via 192.168.255.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
            echo "192.168.2.0/24 via 192.168.255.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
            sed -i '66s/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
            service sshd restart           
            service network restart
            iptables-restore /vagrant/inetRouteriptables
            SHELL

        when "inetRouter2"
         box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "net.ipv4.conf.all.forwarding=1" >> /etc/sysctl.conf
            touch /etc/sysconfig/network-scripts/route-eth1 
            service network restart
            iptables-restore /vagrant/inetRouter2iptables
            SHELL

        when "centralRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "net.ipv4.conf.all.forwarding=1" >> /etc/sysctl.conf
            echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
            sysctl -p
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            nmcli connection modify "System eth2" +ipv4.addresses 192.168.11.1/30
            nmcli connection modify "System eth2" +ipv4.addresses 192.168.12.1/30
            nmcli connection modify "System eth1" +ipv4.gateway 192.168.255.1
            touch /etc/sysconfig/network-scripts/route-eth2
            echo "192.168.2.0/24 via 192.168.12.2" >> /etc/sysconfig/network-scripts/route-eth2
            echo "192.168.1.0/24 via 192.168.11.2" >> /etc/sysconfig/network-scripts/route-eth2
            systemctl restart network
            iptables-restore /vagrant/centralRouteriptables
            yum install nmap -y
            cp /vagrant/knock_client.sh /home/vagrant/
            SHELL

        when "centralServer"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
          echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
          echo "GATEWAY=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
          systemctl restart network
          yum install epel-release -y
          yum install nginx -y
          systemctl start nginx
          systemctl enable nginx
          SHELL

        end 

      end

  end
  
  
end